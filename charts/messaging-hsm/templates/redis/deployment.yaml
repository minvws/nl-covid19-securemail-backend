{{- if .Values.redis.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "app.fullname" . }}-redis
  labels:
    app.kubernetes.io/name: {{ include "app.fullname" . }}-redis
spec:
  replicas: 1
  strategy:
    type: {{ .Values.redis.stategyType }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "app.fullname" . }}-redis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "app.fullname" . }}-redis
    spec:
      terminationGracePeriodSeconds: {{ .Values.redis.terminationGracePeriodSeconds }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ template "app.serviceAccountName" . }}
      {{- end }}
      {{- if .Values.redis.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.redis.imagePullSecrets }}
      {{- end }}
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          command:
            - redis-server
            - "/redis-master/redis.conf"
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources:
{{ toYaml .Values.resources | indent 12 }}
          livenessProbe:
{{ toYaml .Values.redis.livenessProbe | indent 12 }}
          readinessProbe:
{{ toYaml .Values.redis.readinessProbe | indent 12 }}
          lifecycle:
{{ toYaml .Values.redis.lifecycle | indent 12 }}
          volumeMounts:
            - mountPath: /redis-master
              name: config
    {{- with .Values.redis.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.redis.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.redis.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.redis.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
        - name: config
          {{- if .Values.redis.useSecret}}
          secret:
            secretName: {{ template "app.fullname" . }}-redis
            items:
              - key: redis.conf
                path: redis.conf
          {{- else }}
          configMap:
            name: {{ template "app.fullname" . }}-redis
            items:
              - key: redis.conf
                path: redis.conf
          {{- end }}
{{- end }}