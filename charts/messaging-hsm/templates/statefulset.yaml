apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ template "app.fullname" . }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- range $key, $value := .Values.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ template "app.serviceAccountName" . }}
      {{- end }}
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/src/console"]
          {{- if .Values.console.args }}
          args: {{ .Values.console.args }}
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ template "app.fullname" . }}
          - secretRef:
              name: {{ template "app.fullname" . }}
              optional: true
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- with .Values.lifecycle }}
          lifecycle:
{{ toYaml . | indent 12 }}
          {{- end }}
          volumeMounts:
          - name: pkcs11
            mountPath: /etc/utimaco
          - name: storage
            mountPath: /data/utimaco/
    {{- with .Values.securityContext }}
      securityContext:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: pkcs11
        secret:
          secretName: {{ template "app.fullname" . }}-pkcs11
    {{- if not .Values.persistence.enabled }}
      - name: storage
        emptyDir: {}
    {{- else if .Values.persistence.existingClaim }}
      - name: storage
        persistentVolumeClaim:
        claimName: {{ .Values.persistence.existingClaim }}
  {{- else }}
  volumeClaimTemplates:
  - metadata:
      name: storage
    spec:
      storageClassName: {{ .Values.persistence.storageClassName | quote }}
      accessModes:
        {{- toYaml .Values.persistence.accessModes | nindent 8 }}
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
  {{- end }}